<!DOCTYPE html>
<html>
<head>
<script src="https://static.qiantucdn.com/assets/components/jquery-3.7.1.min.js"></script>
<script src="https://cdn.bootcdn.net/ajax/libs/tesseract.js/6.0.0/tesseract.min.js"></script>
</head>

<body>
    <input type="text" id="inputUrl" placeholder="输入视频链接">
    <button onclick="getcaptcha()">获取验证码</button>
    <div id="result">
        <h2 id="title"></h2>
        <img id="cover" src="" alt="封面">
        <video id="video" src="" controls></video>
        <p id="coverUrl"></p>
        <p id="videoUrl"></p>
    </div>

<script>
function getcaptcha() {
    $.ajax({
        url: 'https://ver.kukutool.com/captcha',
        type: 'GET',
        headers: {
            'Host': 'ver.kukutool.com',
            'Connection': 'keep-alive',
            'sec-ch-ua-platform': '"Android"',
            'User-Agent': 'Mozilla/5.0 (Linux; Android 13; Pixel 7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Mobile Safari/537.36',
            'sec-ch-ua': '"Android WebView";v="116", "Chromium";v="116", "Not_A Brand";v="24"',
            'sec-ch-ua-mobile': '?1',
            'Accept': '*/*',
            'Origin': 'https://dy.kukutool.com',
            'X-Requested-With': 'mark.via',
            'Sec-Fetch-Site': 'same-site',
            'Sec-Fetch-Mode': 'cors',
            'Sec-Fetch-Dest': 'empty',
            'Accept-Encoding': 'gzip, deflate, br, zstd',
            'Accept-Language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7',
            'If-None-Match': 'W/"15a5-WcFyYiPuc4/chOgdHp33nceQCYY"'
        },
        success: function(response) {
            var obj = JSON.parse(response);
            ocrcaptcha(obj);
        },
        error: function(xhr, status, error) {
            console.error('请求失败:', error);
        }
    });
}

function parse(url, key, text) {
    $.ajax({
        url: 'https://dy.kukutool.com/api/parse',
        type: 'POST',
        headers: {
            'Host': 'dy.kukutool.com',
            'Connection': 'keep-alive',
            'sec-ch-ua-platform': '"Android"',
            'User-Agent': 'Mozilla/5.0 (Linux; Android 13; Pixel 7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Mobile Safari/537.36',
            'sec-ch-ua': '"Android WebView";v="116", "Chromium";v="116", "Not_A Brand";v="24"',
            'sec-ch-ua-mobile': '?1',
            'Accept': '*/*',
            'Origin': 'https://dy.kukutool.com',
            'X-Requested-With': 'mark.via',
            'Sec-Fetch-Site': 'same-origin',
            'Sec-Fetch-Mode': 'cors',
            'Sec-Fetch-Dest': 'empty',
            'Referer': 'https://dy.kukutool.com/',
            'Accept-Encoding': 'gzip, deflate, br, zstd',
            'Accept-Language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7',
            'Cookie': 'NEXT_LOCALE=zh'
        },
        contentType: 'application/json',
        data: JSON.stringify({
            requestURL: url,
            captchaKey: key,
            captchaInput: text
        }),
        success: function(response) {
            var obj1 = JSON.parse(response);
            var status = obj1.status;
            if (status === 0) {
                var cover = obj1.data.cover;
                var title = obj1.data.title;
                var videoUrl = obj1.data.url;

                // 显示结果
                $('#title').text(title);
                $('#cover').attr('src', cover);
                $('#video').attr('src', videoUrl);
                $('#coverUrl').text('封面链接: ' + cover);
                $('#videoUrl').text('视频链接: ' + videoUrl);
            } else {
                console.error('解析失败:', obj1.message);
                alert('解析失败: ' + obj1.message);
            }
        },
        error: function(xhr, status, error) {
            console.error('请求失败:', error);
            alert('请求失败: ' + error);
        }
    });
}

function ocrcaptcha(obj) {
    const svgString = obj.image;

    // 创建一个 canvas 元素
    const canvas = document.createElement('canvas');
    const ctx = canvas.getContext('2d');

    // 创建一个 Image 对象
    const img = new Image();

    // 将 SVG 字符串转换为 Blob 对象
    const svgBlob = new Blob([svgString], { type: "image/svg+xml;charset=utf-8" });
    const svgUrl = URL.createObjectURL(svgBlob);

    // 设置 Image 对象的 src 属性为 SVG 的 URL
    img.onload = function() {
        // 将图片绘制到 canvas 上
        canvas.width = img.width;
        canvas.height = img.height;
        ctx.drawImage(img, 0, 0);

        // 将 canvas 转换为 Base64 编码的图片字符串
        const dataUrl = canvas.toDataURL("image/png");

        // 之后就可以使用 Tesseract.js 对 dataUrl 进行识别了
        recognizeText(dataUrl, obj);
    }

    img.src = svgUrl;
}

async function recognizeText(imageDataUrl, obj) {
    const worker = Tesseract.createWorker({
        // 指定语言包路径，如果使用默认路径可以不设置
        // langPath: 'https://cdn.jsdelivr.net/npm/@tesseract.js-data/eng@1.0.0/4.0.0_best_int'
    });

    await worker.load();
    await worker.loadLanguage('eng'); // 加载英文语言包，也可以根据需要加载其他语言包
    await worker.initialize('eng');

    const { data: { text } } = await worker.recognize(imageDataUrl, {
        tessedit_char_whitelist: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'
    });

    console.log(text); // 输出识别结果

    // 调用 parse 函数
    parse($('#inputUrl').val(), obj.key, text);

    await worker.terminate();
}
</script>
</body>
</html>
