<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>视频播放器 - 实际API请求</title>
    <link rel="stylesheet" href="https://cdn.bootcdn.net/ajax/libs/font-awesome/6.7.2/css/all.min.css">
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: #f0f0f0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
        }
        
        .container {
            width: 90%;
            max-width: 400px;
            background: #ffffff;
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        }
        
        .video-container {
            position: relative;
            width: 100%;
            aspect-ratio: 16/9;
            overflow: hidden;
            background: #000;
        }
        
        video {
            width: 100%;
            height: 100%;
            object-fit: cover;
 display           : block;
        }
        
        .controls {
            display: flex;
            justify-content: space-between;
            padding: 10px;
            background: #e0e0e0;
        }
        
        .control-btn {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 10px;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
            font-size: 1rem;
            background: #4CAF50;
            color: white;
            min-width: 100px;
        }
        
        .control-btn:hover {
            background: #45a049;
        }
        
        .control-btn:active {
            transform: translateY(1px);
        }
        
        #error-message {
            position: absolute;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: rgba(239, 68, 68, 0.9);
            color: white;
            padding: 10px 20px;
            border-radius: 5px;
            display: none;
            font-weight: 600;
            z-index: 10;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="video-container">
            <video id="video-player" controls></video>
            <div id="error-message">视频加载失败，请重试或选择其他源</div>
        </div>
        
        <div class="controls">
            <button class="control-btn" id="change-button">
                换一个
            </button>
            <button class="control-btn" id="save-button">
                保存视频
            </button>
        </div>
    </div>

    <script>
        const apiUrl = 'video.json';
        let apis = [];
        const videoPlayer = document.getElementById('video-player');
        const errorMessage = document.getElementById('error-message');

        function fetchApis() {
            fetch(apiUrl)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('无法加载video.json: ' + response.status);
                    }
                    return response.json();
                })
                .then(data => {
                    if (!Array.isArray(data)) {
                        throw new Error('video.json格式错误：应为数组');
                    }
                    
                    apis = data;
                    if (apis.length > 0) {
                        loadVideo(0);
                    } else {
                        errorMessage.textContent = 'video.json中没有可用的API';
                        errorMessage.style.display = 'block';
                    }
                })
                .catch(error => {
                    errorMessage.textContent = `错误: ${error.message}`;
                    errorMessage.style.display = 'block';
                    console.error('加载video.json失败:', error);
                });
        }

        function loadVideo(index) {
            if (!apis[index] || !apis[index].url) {
                errorMessage.textContent = '此API没有有效的URL';
                errorMessage.style.display = 'block';
                return;
            }
            
            const videoUrl = apis[index].url;
            
            videoPlayer.src = videoUrl;
            
            videoPlayer.onloadeddata = function() {
                errorMessage.style.display = 'none';
                videoPlayer.play().catch(e => console.log('自动播放被阻止:', e));
            };
            
            videoPlayer.onerror = function() {
                errorMessage.style.display = 'block';
                errorMessage.textContent = '视频加载失败';
            };
        }

        document.getElementById('change-button').addEventListener('click', function() {
            if (apis.length === 0) {
                errorMessage.textContent = '没有可用的API';
                errorMessage.style.display = 'block';
                return;
            }
            const nextIndex = (currentIndex + 1) % apis.length;
            loadVideo(nextIndex);
        });

        document.getElementById('save-button').addEventListener('click', function() {
            if (apis.length === 0) {
                errorMessage.textContent = '没有可用的API';
                errorMessage.style.display = 'block';
                return;
            }
            
            const videoUrl = apis[currentIndex].url;
            if (!videoUrl) {
                errorMessage =.textContent '此API没有有效的URL';
                errorMessage.style.display = 'block';
                return;
            }
            
            const a = document.createElement('a');
            a.href = videoUrl;
            a.download = `video-${currentIndex + 1}.mp4`;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            
            errorMessage.textContent = `下载已开始: ${apis[currentIndex].name || `API ${currentIndex + 1}`}`;
        });

        fetchApis();
    </script>
</body>
</html>
