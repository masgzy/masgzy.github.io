<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <title>视频解析工具</title>
    <style>
        :root {
            --primary-color: #3498db;
            --success-color: #2ecc71;
            --danger-color: #e74c3c;
            --bg-color: #f8f9fa;
            --text-color: #2c3e50;
        }

        body {
            font-family: 'Segoe UI', system-ui, sans-serif;
            background: var(--bg-color);
            color: var(--text-color);
            line-height: 1.6;
            margin: 0;
            padding: 20px;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            padding: 30px;
        }

        .input-group {
            display: flex;
            gap: 10px;
            margin-bottom: 25px;
        }

        input {
            flex: 1;
            padding: 12px 15px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s ease;
        }

        input:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);
        }

        .btn {
            padding: 12px 25px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .btn-primary {
            background: var(--primary-color);
            color: white;
        }

        .btn-primary:hover {
            background: #2980b9;
            transform: translateY(-1px);
        }

        .btn-danger {
            background: var(--danger-color);
            color: white;
        }

        .btn-danger:hover {
            background: #c0392b;
            transform: translateY(-1px);
        }

        .result {
            margin-top: 25px;
            opacity: 0;
            transform: translateY(20px);
            transition: all 0.4s ease;
        }

        .result.show {
            opacity: 1;
            transform: translateY(0);
        }

        .video-info {
            display: flex;
            gap: 25px;
            margin-bottom: 25px;
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
        }

        .cover {
            width: 240px;
            height: 135px;
            object-fit: cover;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .video-title {
            margin: 0;
            font-size: 1.5em;
            color: var(--text-color);
        }

        video {
            width: 100%;
            border-radius: 8px;
            margin-bottom: 20px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .links {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
        }

        .links p {
            margin: 10px 0;
            word-break: break-all;
        }

        .button-group {
            display: flex;
            gap: 15px;
            margin-bottom: 20px;
        }

        .btn-link {
            background: var(--success-color);
            padding: 12px 25px;
        }

        .btn-link:hover {
            background: #27ae60;
        }

        .time {
            color: #7f8c8d;
            font-size: 0.9em;
            text-align: right;
        }

        .error {
            color: var(--danger-color);
            padding: 15px;
            background: #f8d7da;
            border-radius: 8px;
            margin: 15px 0;
            display: none;
        }

        @media (max-width: 768px) {
            .video-info {
                flex-direction: column;
            }
            
            .cover {
                width: 100%;
                height: auto;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="input-group">
            <input type="text" id="urlInput" placeholder="请输入视频链接">
            <button class="btn btn-primary" onclick="parseVideo()">解析视频</button>
            <button class="btn btn-danger" onclick="clearAll()" id="clearBtn" style="display: none;">清空结果</button>
        </div>
        
        <div class="error" id="errorMsg"></div>
        
        <div class="result" id="result">
            <div class="video-info">
                <img class="cover" id="coverImg" src="" alt="视频封面">
                <h2 class="video-title" id="videoTitle"></h2>
            </div>
            
            <video id="videoPlayer" controls>
                <source src="" type="video/mp4">
            </video>
            
            <div class="links">
                <p>播放地址: <span id="playUrl"></span></p>
                <p>下载地址: <span id="downloadUrl"></span></p>
                <p>封面地址: <span id="coverUrl"></span></p>
            </div>
            
            <div class="button-group">
                <a href="#" class="btn btn-link" id="playBtn" target="_blank">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-play-circle" viewBox="0 0 16 16">
                        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16"/>
                        <path d="M6.271 5.055a.5.5 0 0 1 .52.038l3.5 2.5a.5.5 0 0 1 0 .814l-3.5 2.5A.5.5 0 0 1 6 10.5v-5a.5.5 0 0 1 .271-.445"/>
                    </svg>
                    播放
                </a>
                <a href="#" class="btn btn-link" id="downloadBtn" target="_blank">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-download" viewBox="0 0 16 16">
                        <path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5"/>
                        <path d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708z"/>
                    </svg>
                    下载
                </a>
                <a href="#" class="btn btn-link" id="coverBtn" target="_blank">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-image" viewBox="0 0 16 16">
                        <path d="M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0"/>
                        <path d="M2.002 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2zm12 1a1 1 0 0 1 1 1v6.5l-3.777-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12V3a1 1 0 0 1 1-1z"/>
                    </svg>
                    封面
                </a>
            </div>
            
            <div class="time" id="time"></div>
        </div>
    </div>

    <script>
        async function parseVideo() {
            const urlInput = document.getElementById('urlInput');
            const resultDiv = document.getElementById('result');
            const errorMsg = document.getElementById('errorMsg');
            const clearBtn = document.getElementById('clearBtn');

            resultDiv.classList.remove('show');
            errorMsg.style.display = 'none';

            try {
                const response = await fetch(`https://api.yyy001.com/api/videoparse?url=${encodeURIComponent(urlInput.value)}`);
                const data = await response.json();

                document.getElementById('time').textContent = `响应时间: ${data.time}`;

                if (data.success) {
                    document.getElementById('coverImg').src = data.data.cover;
                    document.getElementById('videoTitle').textContent = data.data.title;
                    document.getElementById('videoPlayer').querySelector('source').src = data.data.play_url;
                    document.getElementById('playUrl').textContent = data.data.play_url;
                    document.getElementById('downloadUrl').textContent = data.data.url;
                    document.getElementById('coverUrl').textContent = data.data.cover;

                    document.getElementById('playBtn').href = data.data.play_url;
                    document.getElementById('downloadBtn').href = data.data.url;
                    document.getElementById('coverBtn').href = data.data.cover;

                    resultDiv.classList.add('show');
                    clearBtn.style.display = 'inline-block';
                } else {
                    errorMsg.textContent = `错误: ${data.message}`;
                    errorMsg.style.display = 'block';
                    console.error('API错误:', data.message);
                }
            } catch (error) {
                errorMsg.textContent = '请求失败，请检查网络连接';
                errorMsg.style.display = 'block';
                console.error('请求失败:', error);
            }
        }

        function clearAll() {
            document.getElementById('urlInput').value = '';
            document.getElementById('result').classList.remove('show');
            document.getElementById('errorMsg').style.display = 'none';
            document.getElementById('clearBtn').style.display = 'none';
            
            // 重置所有内容
            document.getElementById('coverImg').src = '';
            document.getElementById('videoTitle').textContent = '';
            document.getElementById('videoPlayer').querySelector('source').src = '';
            document.getElementById('playUrl').textContent = '';
            document.getElementById('downloadUrl').textContent = '';
            document.getElementById('coverUrl').textContent = '';
            document.getElementById('time').textContent = '';
        }
    </script>
</body>
</html>